% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polish.R
\name{polish}
\alias{polish}
\alias{polish.cor_df}
\alias{polish.gee_df}
\alias{polish.lm_df}
\title{Polish the built structure}
\usage{
polish(data, ...)

\method{polish}{gee_df}(data, keep.pattern = "*", adjust.p = FALSE,
  transform.beta.funs = function(x) x, rename.vars.funs = function(x) x,
  rounding = 6)

\method{polish}{cor_df}(data, rename.vars.funs = function(x) x,
  rounding = 2)

\method{polish}{lm_df}(data, keep.pattern = "*", adjust.p = FALSE,
  transform.beta.funs = function(x) x, rename.vars.funs = function(x) x,
  rounding = 6)
}
\arguments{
\item{data}{The data object output from the mason chain (after
\code{\link{build}}).}

\item{...}{Additional arguments}

\item{keep.pattern}{The pattern to keep from the \code{terms} column of the
mason dataframe.}

\item{adjust.p}{Adjust the p-value using the builtin \code{\link{p.adjust}}.}

\item{transform.beta.funs}{A function to transform the \code{estimate},
\code{conf.low}, and \code{conf.high}.}

\item{rename.vars.funs}{Rename character variables and/or values using a
function. Best combined with \code{\link{gsub}} to find and replace
patterns or text.}
}
\value{
Outputs a single dataframe
}
\description{
Put the finishing touches to the finished structure. Used at the end of a
'mason' project (ie. at the end of a mason pipe chain). Adjust p-values for
multiple comparisons, filter the results you want, and transform the beta
coefficients if needed.
}
\examples{

ds <- data.frame(state.region, state.x77)
## GEE
design(ds, 'gee', family = gaussian, corstr = 'exchangeable') \%>\%
    lay_base(id = 'state.region', c('Income', 'Frost'), c('Population', 'Murder'), 'Life.Exp') \%>\%
    build() \%>\%
    polish('Xterm$', TRUE, transform.beta.funs = function(x) exp(x),
         rename.vars.funs = function(x) gsub('Frost', 'f', x))


ds <- data.frame(state.region, state.x77)
## Correlation
design(ds, 'cor') \%>\%
    lay_base(c('Income', 'Frost'), c('Population', 'Murder')) \%>\%
    build() \%>\%
    polish()


## lm
ds <- data.frame(state.region, state.x77)
design(ds, 'lm') \%>\%
   lay_base(c('Income', 'Frost'), c('Population', 'Murder'), covars = 'Life.Exp') \%>\%
   build() \%>\%
   polish('Xterm$', TRUE, function(x) exp(x),
          function(x) gsub('Frost', 'f', x))
design(ds, 'lm') \%>\%
   lay_base(c('Income', 'Frost'), c('Population', 'Murder'), covars = 'Life.Exp',
            intvar = 'Life.Exp') \%>\%
   build() \%>\%
   polish(':')

}

