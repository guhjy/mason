% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_settings.R
\name{add_settings}
\alias{add_settings}
\title{Add analysis settings to the blueprint}
\usage{
add_settings(blueprint, family, corstr, cluster.id, conf.int, conf.level,
  method, paired, use)
}
\arguments{
\item{blueprint}{The blueprint object}

\item{family}{a description of the error distribution and link
    function to be used in the model.  For \code{glm} this can be a
    character string naming a family function, a family function or the
    result of a call to a family function.  For \code{glm.fit} only the
    third option is supported.  (See \code{\link{family}} for details of
    family functions.)}

\item{cluster.id}{Variable that represents the cluster for GEE}

\item{conf.int}{whether to include a confidence interval}

\item{conf.level}{confidence level of the interval.}

\item{method}{a character string indicating which correlation
    coefficient (or covariance) is to be computed.  One of
    \code{"pearson"} (default), \code{"kendall"}, or \code{"spearman"}:
    can be abbreviated.}

\item{paired}{a logical indicating whether you want a paired
    t-test.}

\item{use}{an optional character string giving a
    method for computing covariances in the presence
    of missing values.  This must be (an abbreviation of) one of the strings
    \code{"everything"}, \code{"all.obs"}, \code{"complete.obs"},
    \code{"na.or.complete"}, or \code{"pairwise.complete.obs"}.}
}
\value{
Settings for the analysis are added to the blueprint
}
\description{
Most statistical techniques need to specify some settings for them to run.
This function sets those settings in the blueprint, before the statistical
method is used at the construction phase.
}
\examples{

ds <- design(iris, 'gee')
ds <- add_settings(family = binomial('logit'), conf.int = FALSE)

ds <- design(iris, 'cor')
ds <- add_settings(method = 'spearman')

ds <- design(iris, 't.test')
add_settings(ds, paired = TRUE)
add_settings(ds)

}

